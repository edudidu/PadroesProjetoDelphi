unit Observer.Model.Observer;

interface

uses
  Observer.Model.Interfaces, System.Generics.Collections;

type
  TModelObserver = class(TInterfacedObject, iSubject)
  private
   FLista : TList<iObserver>;
  public
   constructor Create;
   destructor Destroy ; override;
   class function New : iSubject;

   function AddObserver(Value : iObserver) : iSubject;
   function RemovObserver(Value : iObserver) : iSubject;
   function Notify(Value : TPedido) : iSubject;
  end;

implementation

{ TModelObserver }

function TModelObserver.AddObserver(Value: iObserver): iSubject;
begin

end;

constructor TModelObserver.Create;
begin
  FLista := TList<iObserver>.Create;
end;

destructor TModelObserver.Destroy;
begin

  inherited;
end;

class function TModelObserver.New: iSubject;
begin
  Result := Self.create;
end;

function TModelObserver.Notify(Value: TPedido): iSubject;
begin

end;

function TModelObserver.RemovObserver(Value: iObserver): iSubject;
begin

end;

end.
