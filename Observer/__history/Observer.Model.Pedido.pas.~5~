unit Observer.Model.Pedido;

interface

uses
  Observer.Model.Interfaces;

type
  TModelPedido = class(TInterfacedObject, iPedido)
  private
   FSubject : iSubject;
   FOrigem : iPedidoOrigem;
  public
   constructor Create;
   destructor Destroy ; override;
   class function New : iPedido;
   function Observer(Value : iSubject) : iPedido;
   function Origem(Value : iPedidoOrigem) : iPedido;
   function Pedido(Value : TPedido) : iPedido;
   function FazerPedido : iPedido;
   function FinalizarPedido : iPedido;
  end;

implementation

{ TModelPedido }

constructor TModelPedido.Create;
begin

end;

destructor TModelPedido.Destroy;
begin

  inherited;
end;

class function TModelPedido.New: iPedido;
begin
  Result := Self.create;
end;

end.
